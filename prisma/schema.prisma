// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int         @id @default(autoincrement())
  email         String      @unique
  dateCreated   DateTime    @default(now())
  username      String      @unique @db.VarChar(60)
  password      String      @db.VarChar(60)
  isAdmin       Boolean     @default(false)
  
  habits        Habit[]     @relation("Owner")
  goals    Goal[] @relation("Owner")
}

model Goal {
  id                Int           @id @default(autoincrement())
  dateCreated       DateTime      @default(now())
  dateUpdated       DateTime      @updatedAt
  name              String        @db.VarChar(60)
  dueDate           DateTime
  isCompleted       Boolean       
  isCanceled       Boolean

  owner           User        @relation("Owner", fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId         Int

  habits          Habit[]     @relation("Habits")
}

model Habit {
  id              Int         @id @default(autoincrement())
  dateCreated     DateTime    @default(now())
  dateUpdated     DateTime    @updatedAt
  name            String      @db.VarChar(60)
  datesCompleted  DateTime[]  
  scheduleId      String?      @unique
  
  owner           User        @relation("Owner", fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId         Int

  routine         Routine?
  checkIn         CheckIn?

  goal       Goal?   @relation("Habits", fields: [goalId], references: [id], onDelete: Cascade)
  goalId     Int?

  statusReports   StatusReport[]  @relation("StatusReports")

}

// TODO: Change "StatusReport" model name to "CheckInReport" to match UI
model StatusReport {
  id                Int       @id @default(autoincrement())
  recipientEmails   String[]
  content           String    
  dateCreated       DateTime  @default(now())
  checkInDate       DateTime

  habit               Habit        @relation("StatusReports", fields: [habitId], references: [id], onDelete: Cascade)
  habitId             Int
}

model Routine {
  id            Int       @id @default(autoincrement())
  dateCreated   DateTime  @default(now())
  dateUpdated   DateTime  @updatedAt
  monday        Boolean
  tuesday       Boolean
  wednesday     Boolean
  thursday      Boolean
  friday        Boolean
  saturday      Boolean
  sunday        Boolean

  habit         Habit     @relation(fields: [habitId], references: [id], onDelete: Cascade)
  habitId       Int       @unique
}

model CheckIn {
  id            Int       @id @default(autoincrement())
  dayOfTheWeek  DayOfTheWeek 

  habit         Habit     @relation(fields: [habitId], references: [id], onDelete: Cascade)
  habitId       Int       @unique  

}

enum DayOfTheWeek {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}